import * as tslib_1 from "tslib";
import { Directive, HostListener, Optional } from '@angular/core';
import { NavController } from '../../providers/nav-controller';
import { IonRouterOutlet } from './ion-router-outlet';
import * as ɵngcc0 from '@angular/core';
var IonBackButtonDelegate = /** @class */ (function () {
    function IonBackButtonDelegate(routerOutlet, navCtrl) {
        this.routerOutlet = routerOutlet;
        this.navCtrl = navCtrl;
    }
    /**
     * @internal
     */
    IonBackButtonDelegate.prototype.onClick = function (ev) {
        if (this.routerOutlet && this.routerOutlet.canGoBack()) {
            this.routerOutlet.pop();
            ev.preventDefault();
        }
        else if (this.defaultHref != null) {
            this.navCtrl.navigateBack(this.defaultHref);
            ev.preventDefault();
        }
    };
    IonBackButtonDelegate.ctorParameters = function () { return [
        { type: IonRouterOutlet, decorators: [{ type: Optional }] },
        { type: NavController }
    ]; };
    tslib_1.__decorate([
        HostListener('click', ['$event'])
    ], IonBackButtonDelegate.prototype, "onClick", null);
    IonBackButtonDelegate = tslib_1.__decorate([ tslib_1.__param(0, Optional())
    ], IonBackButtonDelegate);
IonBackButtonDelegate.ɵfac = function IonBackButtonDelegate_Factory(t) { return new (t || IonBackButtonDelegate)(ɵngcc0.ɵɵdirectiveInject(IonRouterOutlet, 8), ɵngcc0.ɵɵdirectiveInject(NavController)); };
IonBackButtonDelegate.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: IonBackButtonDelegate, selectors: [["ion-back-button"]], hostBindings: function IonBackButtonDelegate_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function IonBackButtonDelegate_click_HostBindingHandler($event) { return ctx.onClick($event); });
    } }, inputs: { defaultHref: "defaultHref" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IonBackButtonDelegate, [{
        type: Directive,
        args: [{
                selector: 'ion-back-button',
                inputs: ['defaultHref']
            }]
    }], function () { return [{ type: IonRouterOutlet, decorators: [{
                type: Optional
            }] }, { type: NavController }]; }, { onClick: [{
            type: HostListener,
            args: ['click', ['$event']]
        }] }); })();
    return IonBackButtonDelegate;
}());
export { IonBackButtonDelegate };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW9uLWJhY2stYnV0dG9uLmpzIiwic291cmNlcyI6WyJuZzovQGlvbmljL2FuZ3VsYXIvZGlyZWN0aXZlcy9uYXZpZ2F0aW9uL2lvbi1iYWNrLWJ1dHRvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWxFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUUvRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7O0FBTXREO0FBRW1CLElBRWpCLCtCQUNzQixZQUE2QixFQUN6QyxPQUFzQjtBQUMvQixRQUZxQixpQkFBWSxHQUFaLFlBQVksQ0FBaUI7QUFBQyxRQUMxQyxZQUFPLEdBQVAsT0FBTyxDQUFlO0FBQ2xDLElBQUssQ0FBQztBQUNOLElBQ0U7QUFDRjtBQUNFLE9BQUc7QUFDTCxJQUNFLHVDQUFPLEdBQVAsVUFBUSxFQUFTO0FBQ25CLFFBQUksSUFBSSxJQUFJLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLEVBQUU7QUFDNUQsWUFBTSxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQzlCLFlBQU0sRUFBRSxDQUFDLGNBQWMsRUFBRSxDQUFDO0FBQzFCLFNBQUs7QUFBQyxhQUFLLElBQUksSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLEVBQUU7QUFDekMsWUFBTSxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDbEQsWUFBTSxFQUFFLENBQUMsY0FBYyxFQUFFLENBQUM7QUFDMUIsU0FBSztBQUNMLElBQUUsQ0FBQztBQUNGO0FBQ2dFLGdCQWxCM0IsZUFBZSx1QkFBaEQsUUFBUTtBQUFPLGdCQUNDLGFBQWE7QUFDaEM7QUFFRSxJQUlGO0FBQ0YsUUFGRyxZQUFZLENBQUMsT0FBTyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDcEMsd0RBUUc7QUFDRixJQXRCWSxxQkFBcUIsZ0NBSmpDLFNBQVMsQ0FBQyxuQkFJSCxDQUtILG1CQUFBLFFBQVEsRUFBRSxDQUFBO0NBUmIsUUFBUSxFQUFFLGlCQUFpQiw1QkFRYixPQUxILHFCQUFxQixDQXNCakM7V0F4QkMsTUFBTSxFQUFFLENBQUMsYUFBYSxDQUFDLFdBQ3hCLENBQUM7Ozs7Ozs7Ozs7Ozs7OztvQkF3QkY7QUFBQyxJQURELDRCQUFDO0FBQ0EsQ0FEQSxBQXRCRCxJQXNCQztBQUNELFNBdkJhLHFCQUFxQjtBQUVsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdExpc3RlbmVyLCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBOYXZDb250cm9sbGVyIH0gZnJvbSAnLi4vLi4vcHJvdmlkZXJzL25hdi1jb250cm9sbGVyJztcblxuaW1wb3J0IHsgSW9uUm91dGVyT3V0bGV0IH0gZnJvbSAnLi9pb24tcm91dGVyLW91dGxldCc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ2lvbi1iYWNrLWJ1dHRvbicsXG4gIGlucHV0czogWydkZWZhdWx0SHJlZiddLFxufSlcbmV4cG9ydCBjbGFzcyBJb25CYWNrQnV0dG9uRGVsZWdhdGUge1xuXG4gIGRlZmF1bHRIcmVmOiBzdHJpbmcgfCB1bmRlZmluZWQgfCBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBPcHRpb25hbCgpIHByaXZhdGUgcm91dGVyT3V0bGV0OiBJb25Sb3V0ZXJPdXRsZXQsXG4gICAgcHJpdmF0ZSBuYXZDdHJsOiBOYXZDb250cm9sbGVyXG4gICkge31cblxuICAvKipcbiAgICogQGludGVybmFsXG4gICAqL1xuICBASG9zdExpc3RlbmVyKCdjbGljaycsIFsnJGV2ZW50J10pXG4gIG9uQ2xpY2soZXY6IEV2ZW50KSB7XG4gICAgaWYgKHRoaXMucm91dGVyT3V0bGV0ICYmIHRoaXMucm91dGVyT3V0bGV0LmNhbkdvQmFjaygpKSB7XG4gICAgICB0aGlzLnJvdXRlck91dGxldC5wb3AoKTtcbiAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgfSBlbHNlIGlmICh0aGlzLmRlZmF1bHRIcmVmICE9IG51bGwpIHtcbiAgICAgIHRoaXMubmF2Q3RybC5uYXZpZ2F0ZUJhY2sodGhpcy5kZWZhdWx0SHJlZik7XG4gICAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cbiAgfVxufVxuIl19