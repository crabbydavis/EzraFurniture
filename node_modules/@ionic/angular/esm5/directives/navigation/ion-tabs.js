import * as tslib_1 from "tslib";
import { Component, ContentChild, EventEmitter, HostListener, Output, ViewChild } from '@angular/core';
import { NavController } from '../../providers/nav-controller';
import { IonTabBar } from '../proxies';
import { IonRouterOutlet } from './ion-router-outlet';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './ion-router-outlet';

var _c0 = ["outlet"];
var _c1 = [[["", "slot", "top"]], "*"];
var _c2 = ["[slot=top]", "*"];
var IonTabs = /** @class */ (function () {
    function IonTabs(navCtrl) {
        this.navCtrl = navCtrl;
        this.ionTabsWillChange = new EventEmitter();
        this.ionTabsDidChange = new EventEmitter();
    }
    /**
     * @internal
     */
    IonTabs.prototype.onPageSelected = function (detail) {
        var stackId = detail.enteringView.stackId;
        if (detail.tabSwitch && stackId !== undefined) {
            if (this.tabBar) {
                this.tabBar.selectedTab = stackId;
            }
            this.ionTabsWillChange.emit({ tab: stackId });
            this.ionTabsDidChange.emit({ tab: stackId });
        }
    };
    /**
     * When a tab button is clicked, there are several scenarios:
     * 1. If the selected tab is currently active (the tab button has been clicked
     *    again), then it should go to the root view for that tab.
     *
     *   a. Get the saved root view from the router outlet. If the saved root view
     *      matches the tabRootUrl, set the route view to this view including the
     *      navigation extras.
     *   b. If the saved root view from the router outlet does
     *      not match, navigate to the tabRootUrl. No navigation extras are
     *      included.
     *
     * 2. If the current tab tab is not currently selected, get the last route
     *    view from the router outlet.
     *
     *   a. If the last route view exists, navigate to that view including any
     *      navigation extras
     *   b. If the last route view doesn't exist, then navigate
     *      to the default tabRootUrl
     */
    IonTabs.prototype.select = function (tab) {
        var alreadySelected = this.outlet.getActiveStackId() === tab;
        var tabRootUrl = this.outlet.tabsPrefix + "/" + tab;
        if (alreadySelected) {
            var rootView = this.outlet.getRootView(tab);
            var navigationExtras = rootView && tabRootUrl === rootView.url && rootView.savedExtras;
            return this.navCtrl.navigateRoot(tabRootUrl, tslib_1.__assign({}, (navigationExtras), { animated: true, animationDirection: 'back' }));
        }
        else {
            var lastRoute = this.outlet.getLastRouteView(tab);
            /**
             * If there is a lastRoute, goto that, otherwise goto the fallback url of the
             * selected tab
             */
            var url = lastRoute && lastRoute.url || tabRootUrl;
            var navigationExtras = lastRoute && lastRoute.savedExtras;
            return this.navCtrl.navigateRoot(url, tslib_1.__assign({}, (navigationExtras), { animated: true, animationDirection: 'back' }));
        }
    };
    IonTabs.prototype.getSelected = function () {
        return this.outlet.getActiveStackId();
    };
    IonTabs.ctorParameters = function () { return [
        { type: NavController }
    ]; };
    tslib_1.__decorate([
        ViewChild('outlet', { read: IonRouterOutlet, static: false })
    ], IonTabs.prototype, "outlet", void 0);
    tslib_1.__decorate([
        ContentChild(IonTabBar, { static: false })
    ], IonTabs.prototype, "tabBar", void 0);
    tslib_1.__decorate([
        Output()
    ], IonTabs.prototype, "ionTabsWillChange", void 0);
    tslib_1.__decorate([
        Output()
    ], IonTabs.prototype, "ionTabsDidChange", void 0);
    tslib_1.__decorate([
        HostListener('ionTabButtonClick', ['$event.detail.tab'])
    ], IonTabs.prototype, "select", null);
IonTabs.ɵfac = function IonTabs_Factory(t) { return new (t || IonTabs)(ɵngcc0.ɵɵdirectiveInject(NavController)); };
IonTabs.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: IonTabs, selectors: [["ion-tabs"]], contentQueries: function IonTabs_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, IonTabBar, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabBar = _t.first);
    } }, viewQuery: function IonTabs_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true, IonRouterOutlet);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.outlet = _t.first);
    } }, hostBindings: function IonTabs_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("ionTabButtonClick", function IonTabs_ionTabButtonClick_HostBindingHandler($event) { return ctx.select($event.detail.tab); });
    } }, outputs: { ionTabsWillChange: "ionTabsWillChange", ionTabsDidChange: "ionTabsDidChange" }, ngContentSelectors: _c2, decls: 5, vars: 0, consts: [[1, "tabs-inner"], ["tabs", "true", 3, "stackEvents"], ["outlet", ""]], template: function IonTabs_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c1);
        ɵngcc0.ɵɵprojection(0);
        ɵngcc0.ɵɵelementStart(1, "div", 0);
        ɵngcc0.ɵɵelementStart(2, "ion-router-outlet", 1, 2);
        ɵngcc0.ɵɵlistener("stackEvents", function IonTabs_Template_ion_router_outlet_stackEvents_2_listener($event) { return ctx.onPageSelected($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(4, 1);
    } }, directives: [ɵngcc1.IonRouterOutlet], styles: ["[_nghost-%COMP%] {\n      display: flex;\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n\n      flex-direction: column;\n\n      width: 100%;\n      height: 100%;\n\n      contain: layout size style;\n      z-index: $z-index-page-container;\n    }\n    .tabs-inner[_ngcontent-%COMP%] {\n      position: relative;\n\n      flex: 1;\n\n      contain: layout size style;\n    }"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IonTabs, [{
        type: Component,
        args: [{
                selector: 'ion-tabs',
                template: "\n    <ng-content select=\"[slot=top]\"></ng-content>\n    <div class=\"tabs-inner\">\n      <ion-router-outlet #outlet tabs=\"true\" (stackEvents)=\"onPageSelected($event)\"></ion-router-outlet>\n    </div>\n    <ng-content></ng-content>",
                styles: ["\n    :host {\n      display: flex;\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n\n      flex-direction: column;\n\n      width: 100%;\n      height: 100%;\n\n      contain: layout size style;\n      z-index: $z-index-page-container;\n    }\n    .tabs-inner {\n      position: relative;\n\n      flex: 1;\n\n      contain: layout size style;\n    }"]
            }]
    }], function () { return [{ type: NavController }]; }, { ionTabsWillChange: [{
            type: Output
        }], ionTabsDidChange: [{
            type: Output
        }], select: [{
            type: HostListener,
            args: ['ionTabButtonClick', ['$event.detail.tab']]
        }], outlet: [{
            type: ViewChild,
            args: ['outlet', { read: IonRouterOutlet, static: false }]
        }], tabBar: [{
            type: ContentChild,
            args: [IonTabBar, { static: false }]
        }] }); })();
    return IonTabs;
}());
export { IonTabs };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,